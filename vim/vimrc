"       _
"__   _(_)_ __ ___  _ __ ___
"\ \ / / | '_ ` _ \| ' _/ __|
" \ V /| | | | | | | | | (__
"  \_/ |_|_| |_| |_|_|  \___|

"""""""""""""""""""""""""""""""""
"    Rafael Goncalves - 2017    "
"""""""""""""""""""""""""""""""""

""""""""""""""""""
""Initialization""
""""""""""""""""""

set nocompatible   " not compatible with vi = more iMprovements
syntax on          " syntax highlighting
set encoding=utf-8 " in case $LANG is not properly definded

""Leader""
""""""""""
nnoremap <SPACE> <Nop>
let mapleader = "\<Space>"

""Plugins""
"""""""""""
filetype off       " turn off and on for proper plugin init
source ~/dotfiles/vim/vundle.vim " vundle manager
filetype plugin indent on



"""""""""""""""""
""Configuration""
"""""""""""""""""

""Status and command bar""
""""""""""""""""""""""""""
set ruler          " show line/column
set number         " show numbered lines
set relativenumber " show relative numbers instead
set showcmd        " show cmd while beeing typed
set title          " show title on status line
set laststatus=2   " 2 lines for the status line
set cmdheight=2    " 2 lines for cmd prompt
set wildmode=longest,list,full
set wildmenu       " better command-bar completion

set scrolloff=5    " lines under and above cursor to show when scrolling

set confirm        " confirm warning before closing

set hlsearch       " highlight searches
set ignorecase     " ignore letter cases
set smartcase      " case-sensitive when with capital letters

set backupdir=~/.vim/backup
set directory=~/.vim/backup

set backspace=indent,eol,start  " allow backspacing autoindent
set shiftwidth=4   " identation = 4 spaces
set tabstop=4      " tab navigates between 4 spaces gaps
set expandtab
set softtabstop=4

set hidden         " hide vim buffers instead of closing them

set showbreak=\\
set listchars=nbsp:·,tab:▸\ ,trail:·,eol:¬ " Configure how invisibles appear.
set list           " show blank chars
set mouse=a        " mouse selects switches to visual mode
let g:netrw_liststyle=3 " Tree style for explore mode :Explore
set exrc           " Enable per-directory .vimrc files.
set secure         " Disable unsafe commands in per-directory .vimrc files.

" Reload file without prompting if it has changed on disk.
" Will still prompt if there is unsaved text in the buffer.
set autoread
" Do it when switching buffers
au WinEnter,BufWinEnter,CursorHold * silent! checktime

" Automatically save buffers
set autowrite
" When switching to another or leaving focus
au BufLeave,FocusLost * silent! wa

""Relative number toggles""
"""""""""""""""""""""""""""
nnoremap <leader>m :set invrelativenumber<cr>

autocmd InsertEnter * :set norelativenumber
autocmd InsertLeave * :set relativenumber

au FocusLost * :set norelativenumber
au FocusGained * :set relativenumber
" TODO: Aparently not working



""""""""""""
""Mappings""
""""""""""""

nmap <C-j> <C-w>j
nmap <C-k> <C-w>k
nmap <C-l> <C-w>l
nmap <C-h> <C-w>h

nnoremap <C-@> <Esc>/<++><Enter>"_c4l
vnoremap <C-@> <Esc>/<++><Enter>"_c4l
inoremap <C-@> <Esc>/<++><Enter>"_c4l
inoremap ;mrk <++>
nnoremap <leader>x i<++><ESC>

" List buffers_check(identifier, test_ratio, hash):
"    return hash(np.int64(identifier)).digest()[-1] < 256 * test_ratio
" nmap <leader>ls :ls<cr> "useless w/ airline plugin
" New empty buffer
nmap <leader>N :enew<cr>
" New buffer w/ tree of directories
nmap <leader>ne :enew<cr>:Explore<cr>
" Next/Previous buffer
nmap <leader>b :bn<cr>
nmap <leader>B :bp<cr>
" Close current buffer
nmap <leader>d :bd<cr>
" Window creation
nmap <leader>h  :leftabove vsp<CR><c-w>h
nmap <leader>l :rightbelow vsp<CR><c-w>l
nmap <leader>j  :rightbelow sp<CR><c-w>j
nmap <leader>k    :leftabove sp<CR><c-w>k
" New window creation
nmap <leader>nh :leftabove vsp<CR><c-w>h :Explore<CR>
nmap <leader>nl :rightbelow vsp<CR><c-w>l :Explore<CR>
nmap <leader>nj :rightbelow sp<CR><c-w>j :Explore<CR>
nmap <leader>nk :leftabove sp<CR><c-w>k :Explore<CR>
" Load new in same window
nmap <leader>nn :Explore<CR>

" Easier copy/paste from system clipboard
vmap <leader>y "+y
vmap <leader>d "+d
nmap <leader>p "+p
nmap <leader>P "+P
vmap <leader>p "+p
vmap <leader>P "+P

" Keep selection when indenting in v-mode
vnoremap > >gv
vnoremap < <gv

" Adding blank lines before/after cursor
nnoremap <leader>o o<ESC>
nnoremap <leader>O O<ESC>

" Find/replace
nnoremap S :%s//g<left><left>
nnoremap <leader>H :nohl<CR>

nnoremap <leader>w :w<cr>
nnoremap <leader>W :w !sudo tee % > /dev/null<CR>
nnoremap <leader>q :q<cr>
nnoremap <leader>Q :q!<cr>

nnoremap <leader>r :let _s=@/ <Bar> :%s/\s\+$//e <Bar> :let @/=_s <Bar> :nohl <Bar> :unlet _s <CR>

map <F7> :setlocal spell! spelllang=en_us<CR>
map <F8> :setlocal spell! spelllang=pt_br<CR>

" F1 to compile any file
noremap <F1> :make<CR>
" F3 to convert markdown to pdf
noremap <F3> :!pandoc -o %<.pdf %<CR><CR>
" F5 to convert latex to pdf
noremap <F4> :!pdflatex %<CR><CR>
" F2 to run
autocmd Filetype c  map <F2> :!./%<
autocmd FileType py map <F2> :!python %


""""""""""
""Others""
""""""""""
" Make "
""""""""
autocmd FileType c set makeprg=gcc\ -g\ -Wall\ -Wextra\ -o'%<'\ '%'\ -lm autocmd FileType arduino set makeprg=arduino\ --verify

" Templates "
"""""""""""""
autocmd FileType html inoremap ;tmp <ESC>:read ~/.vim/templates/template.html<CR>
autocmd FileType arduino inoremap ;tmp <ESC>:read ~/.vim/templates/template.ino<CR>

" Arduino "
"""""""""""
let g:vimwiki_ext2syntax = {'.ino': 'arduino'}

" Latex "
"""""""""
autocmd FileType tex inoremap ;em \emph{}<++><Esc>T{i
autocmd FileType tex inoremap ;bf \textbf{}<++><Esc>T{i
autocmd FileType tex inoremap ;it \textit{}<++><Esc>T{i
autocmd FileType tex inoremap ;ct \textcite{}<++><Esc>T{i
autocmd FileType tex inoremap ;cp \parencite{}<++><Esc>T{i

autocmd FileType tex inoremap ;ol \begin{enumerate}<Enter><Enter>\end{enumerate}<Enter><Enter><++><Esc>3kA\item<Space>
autocmd FileType tex inoremap ;ul \begin{itemize}<Enter><Enter>\end{itemize}<Enter><Enter><++><Esc>3kA\item<Space>
autocmd FileType tex inoremap ;li <Enter>\item<Space>

autocmd FileType tex inoremap ;chap \chapter{}<Enter><Enter><++><Esc>2kf}i
autocmd FileType tex inoremap ;sec \section{}<Enter><Enter><++><Esc>2kf}i
autocmd FileType tex inoremap ;ssec \subsection{}<Enter><Enter><++><Esc>2kf}i
autocmd FileType tex inoremap ;sssec \subsubsection{}<Enter><Enter><++><Esc>2kf}i

" Markdown "
""""""""""""
let g:vimwiki_ext2syntax = {'.md': 'markdown', '.markdown': 'markdown', '.mdown': 'markdown'}
map <F5> :!w<Enter>:!pdflatex <C-r>%<Enter>
autocmd Filetype markdown inoremap ;1 #
autocmd Filetype markdown inoremap ;2 ##
autocmd Filetype markdown inoremap ;3 ###
autocmd Filetype markdown inoremap ;e **<Space><++><ESC>F*i
autocmd Filetype markdown inoremap ;b ****<Space><++><ESC>F*hi
autocmd Filetype markdown inoremap ;s ~~~~<Space><++><Esc>F~hi
autocmd Filetype markdown inoremap ;t $$<Space><++><ESC>F$i
autocmd Filetype markdown inoremap ;img ![](<++>) <++><ESC>F[a
autocmd Filetype markdown inoremap ;ca o```arduino<CR><CR>```<CR><++><ESC>kk
autocmd Filetype markdown inoremap ;cp o```python<CR><CR>```<CR><++><ESC>kk
autocmd Filetype markdown inoremap ;cb o```bash<CR><CR>```<CR><++><ESC>kk
autocmd Filetype markdown inoremap ;cc o```c<CR><CR>```<CR><++><ESC>kk

" HTML "
""""""""
autocmd FileType html inoremap ;e <em></em><Space><++><ESC>F/hi
autocmd FileType html inoremap ;b <strong></strong><Space><++><ESC>F/hi
autocmd FileType html inoremap ;1 <h1></h1><Enter><Enter><++><ESC>F/hi
autocmd FileType html inoremap ;2 <h2></h2><Enter><Enter><++><ESC>F/hi
autocmd FileType html inoremap ;3 <h3></h3><Enter><Enter><++><ESC>F/hi
autocmd FileType html inoremap ;p <p></p><Enter><Enter><++><ESC>kk
autocmd FileType html inoremap ;a <a<Space>href=""><++></a><Enter><Enter><++><ESC>F/hi
autocmd FileType html inoremap ;img <img src=""/><Space><++>F"i
autocmd FileType html inoremap ;ul <ul><Enter><li></li><Enter></ul><Enter><Enter><++><Esc>03kf<i
autocmd FileType html inoremap ;li <Esc>o<li></li><Esc>F>a
autocmd FileType html inoremap ;ol <ol><Enter><li></li><Enter></ol><Enter><Enter><++><Esc>03kf<i

" CSS "
"""""""
"TODO

" Django "
""""""""""
"TODO

" International keys "
""""""""""""""""""""""
" imap ;c ç
" imap [e é
" imap ;e ê
" imap [a á
" imap {a à
" imap ;a ã
" imap ;o õ
" imap [i í


""""""""""
""Layout""
""""""""""

set background=dark
highlight LineNr ctermfg=244

" Indication for 80 characters width
let &colorcolumn="80,".join(range(81,999),",") "line warnings 80
autocmd Filetype python let &colorcolumn="72,".join(range(72,999),",") "line warnings 72


highlight ColorColumn ctermbg=none cterm=bold guibg=#2c2d27
