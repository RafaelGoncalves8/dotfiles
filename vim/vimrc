"       _
"__   _(_)_ __ ___  _ __ ___
"\ \ / / | '_ ` _ \| ' _/ __|
" \ V /| | | | | | | | | (__
"  \_/ |_|_| |_| |_|_|  \___|

"""""""""""""""""""""""""""""""""
"    Rafael Goncalves - 2019    "
"""""""""""""""""""""""""""""""""

""""""""""""""""""
""Initialization""
""""""""""""""""""
syntax on          " syntax highlighting
set encoding=utf-8 " in case $LANG is not properly definded

""Leader""
""""""""""
nnoremap <SPACE> <Nop>
let mapleader = "\<Space>"

""Plugins""
"""""""""""
filetype off       " turn off and on for proper plugin init
source ~/dotfiles/vim/vundle.vim " vundle manager
filetype plugin indent on

"""""""""""""""""
""Configuration""
"""""""""""""""""
set ruler          " show line/column
set number         " show numbered lines
set relativenumber " show relative numbers instead
set showcmd        " show cmd while beeing typed
set title          " show title on status line
set laststatus=2   " 2 lines for the status line
set cmdheight=2    " 2 lines for cmd prompt
set wildmode=longest,list,full
set wildmenu       " better command-bar completion
set scrolloff=5    " lines under and above cursor to show when scrolling
set confirm        " confirm warning before closing
set hlsearch       " highlight searches
set ignorecase     " ignore letter cases
set smartcase      " case-sensitive when with capital letters
set backspace=indent,eol,start  " allow backspacing autoindent
set shiftwidth=4   " default identation = 4 spaces
set tabstop=4      " default tab navigates between 4 spaces gaps
set expandtab      " tabs to spaces
set softtabstop=4  " default tab width
set hidden         " hide vim buffers instead of closing them
set showbreak=\\
set listchars=nbsp:·,tab:▸\ ,trail:· " Configure how invisibles appear.
set list           " show blank chars
set mouse=a        " mouse selects switches to visual mode
let g:netrw_banner = 0  " remove informative header
let g:netrw_liststyle=3 " Tree style for explore mode :Explore
let g:netrw_winsize=20  " 25% width in Vex or Sex
set splitbelow     " Split down
set splitright     " Split right
set exrc           " Enable per-directory .vimrc files.
set secure         " Disable unsafe commands in per-directory .vimrc files.

" Reload file without prompting if it has changed on disk.
" Will still prompt if there is unsaved text in the buffer.
set autoread
" Automatically save buffers
set autowrite
" Do it when switching buffers
augroup read_write
    au WinEnter,BufWinEnter,CursorHold * silent! checktime
    au BufLeave,FocusLost * silent! wa
augroup END

""Relative number toggles""
"""""""""""""""""""""""""""
nnoremap <leader>m :set invrelativenumber<cr>

augroup auto_relativenumbers
    autocmd InsertEnter * :set norelativenumber
    autocmd InsertLeave * :set relativenumber

    autocmd FocusLost * :set norelativenumber
    autocmd FocusGained * :set relativenumber
    " TODO: Aparently not working
augroup END

set foldmethod=syntax   " fold by syntax if existent
set foldnestmax=3       " max fold level
set nofoldenable        " disable previous fold on file
set foldlevel=2         " dont fold single line

"""""""""""""
" Shortcuts "
"""""""""""""

nnoremap <silent> gj <c-w>j
nnoremap <silent> gk <c-w>k
nnoremap <silent> gl <c-w>l
nnoremap <silent> gh <c-w>h

nnoremap <C-@> <Esc>/<++><Enter>"_c4l
vnoremap <C-@> <Esc>/<++><Enter>"_c4l
inoremap <C-@> <Esc>/<++><Enter>"_c4l
inoremap ;mrk <++>
nnoremap <leader>x i<++><ESC>

nnoremap <leader>L :Lex<cr>

inoremap ;( (<CR>);<C-c>O
inoremap ,( (<CR>),<C-c>O
inoremap ;{ {<CR>};<C-c>O
inoremap ,{ {<CR>},<C-c>O
inoremap ;[ [<CR>];<C-c>O
inoremap ,[ [<CR>],<C-c>O
inoremap :( () => <++><C-c>F(a

" nnoremap <C-u> :m .+1<CR>==
" nnoremap <C-i> :m .-2<CR>==
" inoremap <C-u> <Esc>:m .+1<CR>==gi
" inoremap <C-i> <Esc>:m .-2<CR>==gi
" vnoremap <C-u> :m '>+1<CR>gv=gv
" vnoremap <C-i> :m '<-2<CR>gv=gv

" Next/Previous buffer
nnoremap <leader>b :bn<cr>
nnoremap <leader>B :bp<cr>
" Close current buffer
nnoremap <leader>d :bd<cr>
" Window creation
nnoremap <leader>h  :leftabove vsp<CR><c-w>h
nnoremap <leader>l :rightbelow vsp<CR><c-w>l
nnoremap <leader>j  :rightbelow sp<CR><c-w>j
nnoremap <leader>k    :leftabove sp<CR><c-w>k


" Easier copy/paste from system clipboard
vnoremap <leader>y "+y
vnoremap <leader>d "+d
nnoremap <leader>p "+p
nnoremap <leader>P "+P
vnoremap <leader>p "+p
vnoremap <leader>P "+P

" Avoid unrecoverable <c-u> in insert mode
" inoremap <c-u> <c-g>u<c-u>

" Keep selection when indenting in v-mode
vnoremap > >gv
vnoremap < <gv

" Adding blank lines before/after cursor
nnoremap <leader>o o<ESC>
nnoremap <leader>O O<ESC>

" Find/replace
nnoremap S :%s//g<left><left>
nnoremap <leader>H :nohl<CR>

nnoremap <leader>w :w<cr>
nnoremap <leader>W :w !sudo tee % > /dev/null<CR>
nnoremap <leader>q :q<cr>
nnoremap <leader>Q :q!<cr>

" Remove trailing whitespaces
nnoremap <leader>r :let _s=@/ <Bar> :%s/\s\+$//e <Bar> :let @/=_s <Bar> :nohl <Bar> :unlet _s <CR>

"" International keys "
""""""""""""""""""""""
imap ^e ê
imap ^a â
imap ^o ô
imap ;;e è
imap ;;a à
imap ;a ã
imap ;o õ


" """"""""""
" ""Others""
" """"""""""
augroup filetypedetect
  au! BufRead,BufNewFile *.m,*.oct set filetype=octave
  au! BufRead,BufNewFile *.jsx set filetype=javascript
  au! BufRead,BufNewFile *.scss set filetype=scss
augroup END


let g:vimwiki_ext2syntax = {'.ino': 'arduino', '.md': 'markdown', '.markdown': 'markdown', '.mdown': 'markdown'}

" Use keywords from Octave syntax language file for autocomplete
if has("autocmd") && exists("+omnifunc")
   autocmd Filetype octave
   \ if &omnifunc == "" |
   \ setlocal omnifunc=syntaxcomplete#Complete |
   \ endif
   " autocmd Filetype css setlocal omnifunc=syntaxcomplete#Complete
   " autocmd Filetype scss setlocal omnifunc=syntaxcomplete#Complete
endif

" 2 spaces for html javascript c css
autocmd FileType html setlocal shiftwidth=2 tabstop=2
autocmd FileType javascript setlocal shiftwidth=2 tabstop=2
autocmd FileType jsx setlocal shiftwidth=2 tabstop=2
autocmd FileType c setlocal shiftwidth=2 tabstop=2
autocmd FileType css setlocal shiftwidth=2 tabstop=2
autocmd FileType scss setlocal shiftwidth=2 tabstop=2
autocmd FileType scss.css setlocal shiftwidth=2 tabstop=2
autocmd FileType css set iskeyword+=-
autocmd FileType scss set iskeyword+=-
autocmd FileType python setlocal foldmethod=indent

""""""
" FN "
""""""
noremap <F7> :setlocal spell! spelllang=en_us<CR>
noremap <F8> :setlocal spell! spelllang=pt_br<CR>

" F1 to compile any file
noremap <F1> :make<CR>
" F2 to run
autocmd Filetype c  map <F2> :!./%< <CR>
autocmd FileType py map <F2> :!python % <CR>
" F3 to check syntax
nnoremap <silent> <F3> :SyntasticCheck<CR>
nnoremap <silent> <leader><F3> :SyntasticCheck off<CR>
" F4 to gdb
autocmd FileType c map <F4> :!gdb ./%<
" F5 to valgrind
autocmd FileType c map <F5> :!valgrind --leak-check=full ./%<

" Make "
""""""""
" C89
autocmd FileType c set makeprg=gcc\ -g\ --ansi\ --pedantic\ -Wall\ -Wextra\ -o'%<'\ '%'\ -lm
" C99
autocmd FileType c set makeprg=gcc\ -g\ -Wall\ -Wextra\ -o'%<'\ '%'\ -lm
" Arduino
autocmd FileType arduino set makeprg=arduino\ --verify
" Markdown
autocmd FileType markdown set makeprg=pandoc -o %<.pdf %<CR><CR>
" Latex
autocmd FileType tex set makeprg=xelatex %<CR><CR>
autocmd FileType latex set makeprg=xelatex %<CR><CR>

""""""""""
""Layout""
""""""""""

set background=dark
colorscheme monokai

" Indication for 80 characters width
let &colorcolumn="80,".join(range(81,9999),",") "line warnings 80
autocmd Filetype python let &colorcolumn="72,".join(range(72,9999),",") "line warnings 72


highlight ColorColumn ctermbg=none cterm=bold guibg=#2c2d27

